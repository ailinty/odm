<?xml version="1.0" encoding="UTF-8"?>
<beans
    xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-2.5.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.0.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.0.xsd"
	default-autowire="byName">
	<context:component-scan base-package="com.jiang" />
	
	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter"/>
	
	<!--dataSource -->
	<bean id="dataSource_sql"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="com.microsoft.sqlserver.jdbc.SQLServerDriver" />
		<property name="url"
			value="jdbc:sqlserver://localhost:1433;databaseName=Fabrics" />
		<property name="username" value="sa" />
		<property name="password" value="123456Rq" />
	</bean>

	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource_sql" />
	</bean>
	<tx:annotation-driven transaction-manager="transactionManager"
		proxy-target-class="true" />

	<!-- 2.配置数据工厂(ibatis) -->
	<bean id="sqlMapClient" class="org.springframework.orm.ibatis.SqlMapClientFactoryBean">
		<property name="configLocation" value="classpath:/ibatis/SqlMapConfig.xml" />
		<property name="dataSource" ref="dataSource_sql" />
	</bean>




    <!--<bean id="startUpTimerTask" class="com.jiang.timertask.StartUpTimerTask"/>-->

    <!--&lt;!&ndash; 集成实际执行任务的Bean和方法 &ndash;&gt;-->
    <!--<bean id="timerTaskBean" class="org.springframework.scheduling.timer.MethodInvokingTimerTaskFactoryBean">-->
        <!--<property name="targetObject" ref="startUpTimerTask"/>-->
        <!--<property name="targetMethod" value="execute"/>-->
    <!--</bean>-->

    <!--&lt;!&ndash; 定义时间表 &ndash;&gt;-->
    <!--<bean id="scheduledTimerTask" class="org.springframework.scheduling.timer.ScheduledTimerTask">-->
        <!--<property name="timerTask" ref="timerTaskBean"/>-->
        <!--&lt;!&ndash; 间隔时间 &ndash;&gt;-->
        <!--<property name="period" value="0"/>-->
        <!--&lt;!&ndash; 延长时间 &ndash;&gt;-->
        <!--<property name="delay" value="10000"/>-->
    <!--</bean>-->

    <!--<bean id="timerFactoryBean" class="org.springframework.scheduling.timer.TimerFactoryBean">-->
        <!--<property name="scheduledTimerTasks">-->
            <!--<list>-->
                <!--<ref bean="scheduledTimerTask"/>-->
            <!--</list>-->
        <!--</property>-->
    <!--</bean>-->


    <bean id="demoTask" class="com.jiang.timertask.OrderTimerTask"/>
    <!-- 集成实际执行任务的Bean和方法 -->
    <bean id="jobDetailBean" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="demoTask"/>
        <property name="targetMethod" value="execute"/>
    </bean>

    <!-- 定义时间表   每天23：55 定时清理未处理的订单，将布匹恢复-->
    <bean id="cronTriggerBean" class="org.springframework.scheduling.quartz.CronTriggerBean">
        <property name="jobDetail" ref="jobDetailBean"/>
        <property name="cronExpression" value="0 55 23 * * ?"/>
    </bean>

    <bean id="schedulerFactoryBean" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
        <property name="triggers">
            <list>
                <ref bean="cronTriggerBean"/>
            </list>
        </property>
    </bean>


</beans>